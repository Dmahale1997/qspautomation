<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-OSN2D5R6" failures="0" tests="5" name="Default test" time="2.756" errors="0" timestamp="2022-02-28T08:58:48 IST">
  <testcase classname="testNG1.NewTest" name="@BeforeMethod setup" time="2.416">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 96
Current browser version is 98.0.4758.102 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe
Build info: version: &amp;apos;4.1.1&amp;apos;, revision: &amp;apos;e8fcc2cecf&amp;apos;
System info: host: &amp;apos;LAPTOP-OSN2D5R6&amp;apos;, ip: &amp;apos;192.168.156.254&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 96
Current browser version is 98.0.4758.102 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe
Build info: version: '4.1.1', revision: 'e8fcc2cecf'
System info: host: 'LAPTOP-OSN2D5R6', ip: '192.168.156.254', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:230)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:151)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:108)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:104)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:91)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:46)
at testNG1.NewTest.setup(NewTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNG1.NewTest" name="@AfterMethod tearDown" time="-1.646018928086E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testNG1.NewTest" name="@BeforeMethod setup" time="-1.646018928091E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNG1.NewTest" name="@AfterMethod tearDown" time="-1.646018928113E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testNG1.NewTest" name="@BeforeMethod setup" time="-1.646018928117E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNG1.NewTest" name="@AfterMethod tearDown" time="-1.646018928141E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testNG1.NewTest" name="@BeforeMethod setup" time="-1.646018928147E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNG1.NewTest" name="@AfterMethod tearDown" time="-1.646018928168E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testNG1.NewTest" name="@BeforeMethod setup" time="-1.646018928174E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testNG1.NewTest" name="@AfterMethod tearDown" time="-1.646018928193E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testNG1.NewTest" name="testOrangeHRM" time="0.0">
    <skipped/>
  </testcase> <!-- testOrangeHRM -->
  <testcase classname="testNG1.NewTest" name="testOrangeHRM" time="0.0">
    <skipped/>
  </testcase> <!-- testOrangeHRM -->
  <testcase classname="testNG1.NewTest" name="testOrangeHRM" time="0.0">
    <skipped/>
  </testcase> <!-- testOrangeHRM -->
  <testcase classname="testNG1.NewTest" name="testOrangeHRM" time="0.0">
    <skipped/>
  </testcase> <!-- testOrangeHRM -->
  <testcase classname="testNG1.NewTest" name="testOrangeHRM" time="0.0">
    <skipped/>
  </testcase> <!-- testOrangeHRM -->
</testsuite> <!-- Default test -->
